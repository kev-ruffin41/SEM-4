/* 
Name : KEVIN RUFFIN CHERUTHURUTHY
Class : SE COMPUTERS
Roll NO : 8321
Subject – ANALYSIS OF ALGORITHM
*/

FRACTIONAL KNAPSACK CODE

#include<stdio.h>
#include<math.h>
#define max 20

float v[max][3]={0};
int n;

int main()
{
	int i,j,l;
	float r[max],temp,frac[max],Total_profit=0,cap;
	printf("Enter no. of items: ");
	scanf("%d",&n);
	printf("Enter capacity of sack: ");
	scanf("%f",&cap);

	for(i=0;i<n;i++)
	{
		printf("Enter details for Item %d",i);
		for(j=0;j<=2;j++)
		{
			if(j==0)
			{
				printf("Enter Item no.:");
				scanf("%f",&v[i][j]);
			}
			if(j==1)
			{
				printf("Enter Weight:");
				scanf("%f",&v[i][j]);
			}
			if(j==2)
			{
				printf("Enter Profit of item:");
				scanf("%f",&v[i][j]);
			}
		}
	}
	printf("Printing Matrix\n");

	for(i=0;i<=n-1;i++)
	{
		for(j=0;j<=2;j++)
		{
			printf("%f\t",v[i][j]);
		}
		printf("\n");
		
	}

	for(i=0;i<n;i++)
	{
		r[i]=v[i][2]/v[i][1];
	}
	for(i=0;i<n-1;i++)
	{
		for(j=0;j<n-1-i;j++)
		{
			if(r[j]<r[j+1])
			{
				for(l=0;l<=2;l++)
				{
					temp=v[j][l];
					v[j][l]=v[j+1][l];
					v[j+1][l]=temp;
				}
				
			}
		}
	}
	printf("Printing Matrix\n");
	for(i=0;i<=n-1;i++)
	{
		for(j=0;j<=2;j++)
		{
			printf("%f\t",v[i][j]);
		}
		printf("\n");
		
	}
	for(i=0;(i<=n-1)&&(cap!=0);i++)
	{
		if(cap>=v[i][1])
		{
			frac[i]=1;
			cap=cap-v[i][1];
			Total_profit=Total_profit+v[i][2];
		}
		else
		{
			l=frac[i]=cap/v[i][1];
			Total_profit=Total_profit+(l*v[i][2]);
		}
	}
	printf("Printing the fraction array:\n");
	for(i=0;i<=n-1;i++)
	{
		printf("%f\t",frac[i]);
	}
	printf("Total profit: %f",Total_profit);
	return 0;
}
OUTPUT
Enter no. of items: 5
Enter capacity of sack: 22
Enter Item no.:0
Enter Weight:3
Enter Profit of item:5
Enter Item no.:1
Enter Weight:5
Enter Profit of item:6
Enter Item no.:2
Enter Weight:3
Enter Profit of item:6
Enter Item no.:3
Enter Weight:4
Enter Profit of item:6
Enter Item no.:5
Enter Weight:8
Enter Profit of item:8

Printing Matrix
0.000000	3.000000	5.000000	
1.000000	5.000000	6.000000	
2.000000	3.000000	6.000000	
3.000000	4.000000	6.000000	
5.000000	8.000000	8.000000	

Printing Matrix
0.000000	3.000000	5.000000	
2.000000	3.000000	6.000000	
1.000000	5.000000	6.000000	
3.000000	4.000000	6.000000	
5.000000	8.000000	8.000000	

Printing the fraction array:
1.000000	1.000000	1.000000	1.000000	0.875000	Total profit: 23.000000










