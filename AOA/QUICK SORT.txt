/* 
Name : KEVIN RUFFIN CHERUTHURUTHY
Class : SE COMPUTERS
Roll NO : 8321
Subject – ANALYSIS OF ALGORITHM
*/
QUICK SORT

#include<stdio.h>
#include<stdlib.h>
#define SIZE 100

void swap(int *a,int *b)
{
	int temp;
	temp=*a;
	*a=*b;
	*b=temp;
}

int partition(int a[],int low,int high)
{
	int  pivot,i,j;
	pivot=a[low];
	i=low;
	j=high;
	while(pivot >= a[i])
	{
		i++;
	}	
	while(pivot<a[j])
	{
		j--;
	}
	if(i<j)
	{
		swap(&a[i],&a[j]);
	}
	swap(&a[low],&a[j]);
	return j;
}

void quicksort(int a[],int low,int high)
{
	int p;
	if(low<high)
	{
		p=partition(a,low,high);
		quicksort(a,low,p-1);
		quicksort(a,p+1,high);
	}
}






void display(int a[],int n)
{
	int i;
	for(i=0;i<n;i++)
	{
		printf("%d ",a[i]);
	}
	printf("\n");
}

void main()
{
	int a[SIZE],i,j,ele,n;
	printf("Enter number of elements\n");
	scanf("%d",&n);
	printf("Enter elements\n");
	for(i=0;i<n;i++)
	{
		scanf("%d",&a[i]);
	}
	printf("Array before sorting\n");
	display(a,n);
	printf("Array after sorting\n");
	quicksort(a,0,n-1);
	display(a,n);
}     
/*
Enter number of elements
10
Enter elements
9
8
7
6
5
4
3
2
1
0
Array before sorting
9 8 7 6 5 4 3 2 1 0 
Array after sorting
0 1 2 3 4 5 6 7 8 9 



