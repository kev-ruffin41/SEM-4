


/* 
Name : KEVIN RUFFIN CHERUTHURUTHY
Class : SE COMPUTERS
Roll NO : 8321
Subject – ANALYSIS OF ALGORITHM
*/

I/O KNAPSACK

#include<stdio.h>
#define MAX 100
void main()

{
	int i,n,M,p[MAX],w[MAX],x[MAX],k,temp,sorted=0,j;
	float tp,pw[MAX],recap;
	printf("enter number of items");
	scanf("%d",&n);
	for(i=0;i<n;i++)
	{	
		printf("enter profit of items");
		scanf("%d",&p[i]);
		printf("enter weight of items");
		scanf("%d",&w[i]);
	}

	printf("enter the capacity of knapsack");
	scanf("%d",&M);
	for(i=0;i<=n;i++)
	{
 		 pw[i]=p[i]/w[i];
	}

	for(i=0;i<n-1 && sorted==1;i++)
	{
		sorted=0;
		for(j=0;j<=n-2-i;j++)
		{
			if(pw[j]>=pw[j+1])
			{
				temp=pw[j];
				pw[j]=pw[j+1];
				pw[j+1]=temp;
			
				temp=p[j];
				p[j]=p[j+1];
				p[j+1]=temp;

				temp=w[j];
				w[j]=w[j+1];
				w[j+1]=temp;
				sorted=1;
			}
		}
	}




	k=0;
	while(recap>0)
	{
  		if(w[i]<=recap)
  		{
			x[i]=1;
			recap=recap-w[i];
			i++;
  		}
  		else
		{
			x[i]=recap/w[i];
			recap=0;
  		}

		for(i=0;i<n;i++)
		{
			tp=tp+x[i]*p[i];
		}
	
		printf("tp=%f",tp);
	}
}
